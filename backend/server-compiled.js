(()=>{var e={860:e=>{"use strict";e.exports=require("express")},13:e=>{"use strict";e.exports=require("mongodb")},109:e=>{"use strict";e.exports=require("sanitize-html")}},t={};function s(a){var n=t[a];if(void 0!==n)return n.exports;var o=t[a]={exports:{}};return e[a](o,o.exports,s),o.exports}(()=>{const{MongoClient:e,ObjectId:t}=s(13),a=s(860),n=s(109);let o;const i=a();i.set("view engine","ejs"),i.set("views","./views"),i.use(a.static("../public")),i.use(a.json()),i.use(a.urlencoded({extended:!1})),i.get("/",(async(e,t)=>{const s=await o.collection("Tasks").find().toArray();console.log(s),t.render("home",{allTasks:s})})),i.get("/admin",((e,t)=>{t.render("admin")})),i.get("/api/tasks",(async(e,t)=>{const s=await o.collection("Tasks").find().toArray();t.json(s)})),i.post("/create-task",((e,t,s)=>{e.cleanData={name:n(e.body.name.trim(),{allowedTags:[],allowedAttributes:{}}),description:n(e.body.description.trim(),{allowedTags:[],allowedAttributes:{}}),status:n(e.body.status.trim(),{allowedTags:[],allowedAttributes:{}})},s()}),(async(e,s)=>{const a=await o.collection("Tasks").insertOne(e.cleanData),n=await o.collection("Tasks").findOne({_id:new t(a.insertId)});s.send(n)})),i.post("/update-task",(async(e,s)=>{console.log(e.body),o.collection("Tasks").replaceOne({_id:new t(e.params.id)},e.body),s.send("Task Updated")})),i.delete("/task/:id",(async(e,s)=>{"string"!=typeof e.params.id&&(e.params.id=""),o.collection("Tasks").deleteOne({_id:new t(e.params.id)}),s.send("Item Deleted")})),async function(){const t=new e("mongodb://root:root@localhost:27017/Kanban-App?&authSource=admin");await t.connect(),o=t.db(),i.listen(3e3)}()})()})();